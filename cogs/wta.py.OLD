import discord
from discord.ext import commands
import datetime
import json
import time
import logging
import aiohttp
from jishaku.paginators import WrappedPaginator, PaginatorEmbedInterface

logging.basicConfig(filename='bot.log',level=logging.INFO)

print("wta.py has been loaded")

with open('config_prod.json', 'r') as cfg:
	config = json.load(cfg)


class winnertakesall(commands.Cog, name="Winner Takes All S2"):
	def __init__(self, bot):
		self.bot = bot
  
	@commands.command(name='wta', description='Get info about Winner Takes All Season 2')
	async def wta(self, ctx, streamer: str = None):
		'''Get info about Winner Takes All Season 2'''
		if streamer == None:
			async with aiohttp.ClientSession() as session:
				async with session.get(f'https://winnertakesall.io/api/donationinfo') as resp:
					data = await resp.read()
					info = json.loads(data)
			if not info['success']:
				raise commands.CommandError('Something went wrong while trying to contact the Winner Takes All API.')
			try:
				raised = info['raised']
			except KeyError:
				raised = 0
			try:
				donations = info['donations']
			except KeyError:
				donations = 0
			latest = {}
			try:
				latest['name'] == info['latest']['name']
			except KeyError:
				latest['name'] = None
			try:
				latest['comment'] = info['latest']['comment']
			except KeyError:
				latest['comment'] = None
			try:
				latest['streamer'] = info['latest']['streamer']
			except KeyError:
				latest['streamer'] = None
			try:
				latest['item'] = info['latest']['item']
			except KeyError:
				latest['item'] = None
			try:
				latest['amount'] = info['latest']['amount']
			except KeyError:
				latest['amount'] = 0
			highest = {}
			try:
				highest['name'] = info['highest']['name']
			except KeyError:
				highest['name'] = None
			try:
				highest['comment'] = info['highest']['comment']
			except KeyError:
				highest['comment'] = None
			try:
				highest['streamer'] = info['highest']['streamer']
			except KeyError:
				highest['streamer'] = None
			try:
				highest['item'] = info['highest']['item']
			except KeyError:
				highest['item'] = None
			try:
				highest['amount'] = info['highest']['amount']
			except KeyError:
				highest['amount'] = 0
			embed = discord.Embed(title="Winner Takes All Season 2", colour=ctx.author.color, url="https://winnertakesall.io", description="Here's a bunch of info about the latest season of Winner Takes All!", timestamp=datetime.datetime.utcnow())
			embed.set_footer(text="Go donate at https://winnertakesall.io/", icon_url="https://winnertakesall.io/img/WinnerTakesAll_Logo.png")
			embed.add_field(name="What is it?", value="Winner Takes All is a Minecraft livestreamed event for prize money. Founded, owned, and organized by [@Pikaclicks](https://twitter.com/Pikaclicks).\n\nSeason 1 was to see who could livestream the longest and the winner set a new record for the longest Minecraft livestream at 53 hours long\n\nSeason 2 is a new gametype called Lifeblocks. When a player's \"lifeblock\" is destroyed, they get eliminated. It also brings back the [UHC On Air donation system](https://winnertakesall.io/) where you can give streamers positive or negative items", inline=False)
			embed.add_field(name="When is it?", value="The event takes place on March 23rd at 12PM EST", inline=False)
			embed.add_field(name="Where does the money go?", value="This season, the money is going to charity's picked by the streamers. When you donate to a streamer, the money will go to their chosen charity. Provide a streamer's name to check out their info.", inline=False)
			async with aiohttp.ClientSession() as session:
				async with session.get(f'https://winnertakesall.io/api/streamers') as resp:
					data = await resp.read()
					jsondata = json.loads(data)
					streamers = jsondata['streamers']
			amount = 0
			for youtuber in streamers:
				amount = amount + int(youtuber['raised'])
			embed.add_field(name='Total Donations', value=f'${int(amount):,d}', inline=False)
			if latest['amount'] == 0:
				embed.add_field(name="Latest Donation", value="No donations yet!", inline=True)
			else:
				embed.add_field(name="Latest Donation", value=f"**• Name** - {latest['name']}\n**• Streamer** - {latest['streamer']}\n**• Comment** - {latest['comment']}\n**• Amount** - ${latest['amount']}", inline=True)
			if highest['amount'] == 0:
				embed.add_field(name="Highest Donation", value="No donations yet!", inline=True)
			else:
				embed.add_field(name="Highest Donation", value=f"**• Name** - {highest['name']}\n**• Streamer** - {highest['streamer']}\n**• Comment** - {highest['comment']}\n**• Amount** - ${highest['amount']}", inline=True)
			await ctx.send(embed=embed)
			return
		async with aiohttp.ClientSession() as session:
			async with session.get(f'https://winnertakesall.io/api/streamers') as resp:
				data = await resp.read()
				jsondata = json.loads(data)
				streamers = jsondata['streamers']
		streamerlist = []
		for youtuber in streamers:
			streamerlist.append(youtuber['name'])
		if streamer not in streamerlist:
			paginator = WrappedPaginator(prefix='```', suffix='```', max_size=1024)
			paginator.add_line('The streamer you provided was invalid so here\'s a list of them all')
			for youtuber in streamers:
				name = youtuber['name']
				link = youtuber['link']
				raised = youtuber['raised']
				dead = youtuber['dead']
				charity = youtuber['charity']
				paginator.add_line(f'• Name - {name}\n• Link - {link}\n• Raised - ${raised}\n• Dead? - {dead}\n• Charity - {charity}\n')
			interface = PaginatorEmbedInterface(ctx.bot, paginator, owner=ctx.author)
			await interface.send_to(ctx)
		else:
			for youtuber in streamers:
				if youtuber['name'] == streamer:
					streamer = youtuber
					break
			if streamer == None:
				raise commands.CommandError('Streamer info was invalid. oof')
			embed = discord.Embed(title="Winner Takes All Season 2", colour=ctx.author.color, url=f"https://winnertakesall.io/streamer/{streamer['name']}", description=f"Here's a bunch of info about {streamer['name']}", timestamp=datetime.datetime.utcnow())
			embed.set_footer(text=f"Donate at https://winnertakesall.io/streamer/{streamer['name']}", icon_url="https://winnertakesall.io/img/WinnerTakesAll_Logo.png")
			embed.add_field(name="Name", value=f"[{streamer['name']}]({streamer['link']})", inline=False)
			embed.add_field(name="Raised", value=f"${streamer['raised']}", inline=False)
			embed.add_field(name="Donations", value=streamer['donations'], inline=False)
			embed.add_field(name="Dead?", value=str(streamer['dead']), inline=False)
			embed.add_field(name="Charity", value=streamer['charity'], inline=False)
			await ctx.send(embed=embed)

def setup(bot):
	bot.add_cog(winnertakesall(bot))